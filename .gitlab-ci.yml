image: golang:1.13

variables:
  REPO_NAME: gitlab.markany.wm/argos/cleaner

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - package
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
  tags:
    - linux
    
compile:
  stage: build
  variables:
    GOOS: "linux"
    GOARCH: "amd64"
    GO111MODULE: 'on'
    CGO_ENABLED: "0"
  artifacts:
    name: $CI_PROJECT_NAME-sync-$CI_COMMIT_REF_NAME-$GOOS-$GOARCH
    expire_in: 6 week
    paths:
      - cleaner
  script:
    - go build -ldflags -s -o $CI_PROJECT_DIR/cleaner
  tags:
    - linux
    
build_docker:
  image: docker:latest
  stage: package
  artifacts:
    name: $CI_PROJECT_NAME-docker-$CI_COMMIT_REF_NAME-$GOOS-$GOARCH
    expire_in: 6 week
    paths:
      - $CI_PROJECT_NAME.tar.gz
  dependencies:
    - compile
  services:
    - name: docker:dind
      command: ["--insecure-registry=nas.markany.wm"]
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull --cache-from "${CI_REGISTRY_IMAGE}:latest" --tag "${CI_REGISTRY_IMAGE}:latest" .
    - docker tag "${CI_REGISTRY_IMAGE}:latest" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    - test ! -z "${CI_COMMIT_TAG}" && docker push "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" ${CI_PROJECT_NAME}
    - docker save "${CI_PROJECT_NAME}" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}" | gzip -c > "${CI_PROJECT_NAME}.tar.gz"
  tags:
    - linux
